services:
  webapplication1:
    image: ${DOCKER_REGISTRY-}webapplication1
    build:
      context: .
      dockerfile: WebApplication1/Dockerfile
    restart: always
    environment:
      - HashServiceUrl=http://hashservice
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - apinet
    depends_on:
      - mysql
      - hashservice
    ports:
      - "0.0.0.0:8080:8080"

  hashservice:
    image: ${DOCKER_REGISTRY-}hashservice
    build:
      context: .
      dockerfile: HashService/Dockerfile
    restart: always
    networks:
      - apinet
    ports:
      - "0.0.0.0:5000:80"

  webapplication2:
    image: ${DOCKER_REGISTRY-}webapplication2
    build:
      context: .
      dockerfile: WebApplication2/WebApplication2/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - apinet
    ports:
      - "0.0.0.0:8082:8080"

  mysql:
    image: mariadb:10.11
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: db
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - apinet
    ports:
      - "0.0.0.0:3406:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 10

  db-init:
    image: mariadb:10.11
    depends_on:
      mysql:
        condition: service_healthy
    command: >
      sh -c "
        until mysql -h mysql -uroot -proot -e 'SELECT 1' > /dev/null 2>&1; do
          echo 'Waiting for MySQL to be ready...'
          sleep 2
        done
        echo 'MySQL is ready, applying schema...'
        mysql -h mysql -uroot -proot db < /data/main.sql
        echo 'Schema applied successfully!'
      "
    volumes:
      - ./main.sql:/data/main.sql:ro
    networks:
      - apinet
    restart: "no"

volumes:
  mysql-data:

networks:
  apinet:
    driver: bridge