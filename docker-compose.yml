version: '3.8'

services:

  rostov-ai-travel-client:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: rostov-client
    env_file: ".env"
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-5000}
      - DB_URL=${DB_URL:-mongodb://mongo:27017/rostov-ai-travel}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - TWOGIS_API_KEY=${TWOGIS_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - ROSREESTR_API_KEY=${ROSREESTR_API_KEY}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - USE_EXPO_LOCATION=${USE_EXPO_LOCATION:-true}
      - USE_EXPO_MAPS=${USE_EXPO_MAPS:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - BOOKING_API_KEY=${BOOKING_API_KEY}
      - TRIPADVISOR_API_KEY=${TRIPADVISOR_API_KEY}
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - rostov-network

  mongo:
    image: mongo:7.0
    container_name: rostov-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: rostov-ai-travel
    networks:
      - rostov-network

volumes:
  mongo_data:

networks:
  rostov-network:
    driver: bridge
