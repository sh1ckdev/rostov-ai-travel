import {
  StartChatUserRequest,
  ChatMessageRequest,
  ChatResponse,
  ApiResponse,
  MessageDto
} from '../types/api';

export interface AISession {
  sessionId: string;
  location?: string;
  createdAt: Date;
  lastActivity: Date;
  messageCount: number;
}

export interface ChatMessage {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
  sessionId?: string;
}

export interface AIRecommendation {
  id: string;
  title: string;
  description: string;
  category: string;
  confidence: number;
  reasoning: string;
  action?: string;
}

export class AIHotelService {
  private static currentSession: AISession | null = null;
  private static sessionHistory: AISession[] = [];

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞ —Å –ò–ò
   */
  static async initializeSession(location?: string): Promise<AISession> {
    try {
      console.log('ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI —Å–µ—Å—Å–∏–∏ (offline —Ä–µ–∂–∏–º)...', { location });
      
      // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é –±–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
      const session: AISession = {
        sessionId: `session-${Date.now()}-${Math.random().toString(36).substring(7)}`,
        location: location || '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É',
        createdAt: new Date(),
        lastActivity: new Date(),
        messageCount: 0
      };

      this.currentSession = session;
      this.sessionHistory.unshift(session);

      console.log('‚úÖ AI —Å–µ—Å—Å–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ (offline):', session.sessionId);
      return session;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI —Å–µ—Å—Å–∏–∏:', error);
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é —Å –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
   */
  static async sendMessage(message: string): Promise<ChatMessage> {
    if (!this.currentSession) {
      throw new Error('–°–µ—Å—Å–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–µ—Å—Å–∏—é.');
    }

    try {
      console.log('üì§ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (offline —Ä–µ–∂–∏–º):', { message, sessionId: this.currentSession.sessionId });

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã—Ö
      const response = await this.generateOfflineResponse(message);

      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
      this.currentSession.lastActivity = new Date();
      this.currentSession.messageCount++;

      const aiMessage: ChatMessage = {
        id: `ai-${Date.now()}-${Math.random().toString(36).substring(7)}`,
        role: 'assistant',
        content: response,
        timestamp: new Date(),
        sessionId: this.currentSession.sessionId
      };

      console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω (offline)');
      return aiMessage;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã—Ö (offline —Ä–µ–∂–∏–º)
   */
  private static async generateOfflineResponse(message: string): Promise<string> {
    const { hardcodedHotels, searchHotels, getHotelsByFilters } = await import('../data/hotels');
    const lowerMessage = message.toLowerCase();

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π') || lowerMessage.includes('hello')) {
      return `–ü—Ä–∏–≤–µ—Ç! üëã –Ø –≤–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ç—É—Ä–∏–∑–º—É –≤ –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å:\n\nüè® –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –æ—Ç–µ–ª—è–º\nüí∞ –ü–æ–∏—Å–∫–æ–º –ø–æ –±—é–¥–∂–µ—Ç—É\n‚≠ê –õ—É—á—à–∏–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É\nüîç –ü–æ–∏—Å–∫–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ—Ç–µ–ª–µ–π\n\n–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`;
    }

    // –ü–æ–º–æ—â—å
    if (lowerMessage.includes('–ø–æ–º–æ—â—å') || lowerMessage.includes('help') || lowerMessage.includes('—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å')) {
      return `ü§ñ –Ø —É–º–µ—é:\n\n‚Ä¢ –ò—Å–∫–∞—Ç—å –æ—Ç–µ–ª–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã\n‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª—É—á—à–∏–µ –æ—Ç–µ–ª–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É\n‚Ä¢ –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ —Ü–µ–Ω–µ –∏ —É–¥–æ–±—Å—Ç–≤–∞–º\n‚Ä¢ –î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—é\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!`;
    }

    // –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    if (lowerMessage.includes('–æ—Ç–µ–ª—å') || lowerMessage.includes('–≥–æ—Å—Ç–∏–Ω–∏—Ü') || lowerMessage.includes('–≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è') || lowerMessage.includes('—Ä–∞–∑–º–µ—â–µ–Ω–∏–µ')) {
      const hotels = searchHotels(message);
      
      if (hotels.length > 0) {
        let response = `üè® –ù–∞—à–µ–ª –¥–ª—è –≤–∞—Å ${hotels.length} –æ—Ç–µ–ª${hotels.length === 1 ? '—å' : '—è/–µ–π'}:\n\n`;
        hotels.slice(0, 3).forEach((hotel, i) => {
          response += `${i + 1}. **${hotel.name}** (${hotel.starRating}‚≠ê)\n`;
          response += `   üìç ${hotel.address}\n`;
          response += `   üí∞ ${hotel.pricePerNight} ${hotel.currency}/–Ω–æ—á—å\n`;
          response += `   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n`;
          response += `   ‚ú® ${hotel.description}\n\n`;
        });
        return response;
      }
    }

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ü–µ–Ω–µ
    if (lowerMessage.includes('–±—é–¥–∂–µ—Ç') || lowerMessage.includes('–Ω–µ–¥–æ—Ä–æ–≥') || lowerMessage.includes('–¥–µ—à–µ–≤') || lowerMessage.includes('—ç–∫–æ–Ω–æ–º')) {
      const cheapHotels = hardcodedHotels
        .filter(h => h.pricePerNight < 5000)
        .sort((a, b) => a.pricePerNight - b.pricePerNight)
        .slice(0, 3);
      
      let response = 'üí∞ –ë—é–¥–∂–µ—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–µ–ª–µ–π (–¥–æ 5000‚ÇΩ/–Ω–æ—á—å):\n\n';
      cheapHotels.forEach((hotel, i) => {
        response += `${i + 1}. **${hotel.name}** (${hotel.starRating}‚≠ê)\n`;
        response += `   üí∞ ${hotel.pricePerNight} ‚ÇΩ/–Ω–æ—á—å\n`;
        response += `   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n`;
        response += `   üìç ${hotel.address}\n\n`;
      });
      return response;
    }

    // –î–æ—Ä–æ–≥–∏–µ –æ—Ç–µ–ª–∏
    if (lowerMessage.includes('–¥–æ—Ä–æ–≥') || lowerMessage.includes('–ª—é–∫—Å') || lowerMessage.includes('–ø—Ä–µ–º–∏—É–º') || lowerMessage.includes('—Ä–æ—Å–∫–æ—à–Ω')) {
      const luxuryHotels = hardcodedHotels
        .filter(h => h.pricePerNight > 8000)
        .sort((a, b) => b.pricePerNight - a.pricePerNight)
        .slice(0, 3);
      
      let response = 'üíé –ü—Ä–µ–º–∏—É–º –æ—Ç–µ–ª–∏ (–æ—Ç 8000‚ÇΩ/–Ω–æ—á—å):\n\n';
      luxuryHotels.forEach((hotel, i) => {
        response += `${i + 1}. **${hotel.name}** (${hotel.starRating}‚≠ê)\n`;
        response += `   üí∞ ${hotel.pricePerNight} ‚ÇΩ/–Ω–æ—á—å\n`;
        response += `   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n`;
        response += `   üéØ –£–¥–æ–±—Å—Ç–≤–∞: ${hotel.amenities.slice(0, 3).join(', ')}\n\n`;
      });
      return response;
    }

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
    if (lowerMessage.includes('–ª—É—á—à') || lowerMessage.includes('—Ç–æ–ø') || lowerMessage.includes('—Ä–µ–π—Ç–∏–Ω–≥') || lowerMessage.includes('–ø–æ–ø—É–ª—è—Ä–Ω')) {
      const topHotels = hardcodedHotels
        .sort((a, b) => b.rating - a.rating)
        .slice(0, 3);
      
      let response = 'üèÜ –õ—É—á—à–∏–µ –æ—Ç–µ–ª–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É:\n\n';
      topHotels.forEach((hotel, i) => {
        response += `${i + 1}. **${hotel.name}** (${hotel.starRating}‚≠ê)\n`;
        response += `   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n`;
        response += `   üí∞ ${hotel.pricePerNight} ‚ÇΩ/–Ω–æ—á—å\n`;
        response += `   üìç ${hotel.address}\n\n`;
      });
      return response;
    }

    // –ü–æ–∏—Å–∫ –ø–æ —É–¥–æ–±—Å—Ç–≤–∞–º
    if (lowerMessage.includes('wi-fi') || lowerMessage.includes('–ø–∞—Ä–∫–æ–≤–∫') || lowerMessage.includes('—Å–ø–∞') || lowerMessage.includes('—Ñ–∏—Ç–Ω–µ—Å') || lowerMessage.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω')) {
      const amenity = lowerMessage.includes('wi-fi') ? 'wi-fi' :
                     lowerMessage.includes('–ø–∞—Ä–∫–æ–≤–∫') ? '–ø–∞—Ä–∫–æ–≤–∫–∞' :
                     lowerMessage.includes('—Å–ø–∞') ? '—Å–ø–∞' :
                     lowerMessage.includes('—Ñ–∏—Ç–Ω–µ—Å') ? '—Ñ–∏—Ç–Ω–µ—Å' :
                     lowerMessage.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') ? '—Ä–µ—Å—Ç–æ—Ä–∞–Ω' : '';
      
      if (amenity) {
        const hotelsWithAmenity = hardcodedHotels.filter(h => h.amenities.includes(amenity));
        
        let response = `üè® –û—Ç–µ–ª–∏ —Å ${amenity}:\n\n`;
        hotelsWithAmenity.slice(0, 3).forEach((hotel, i) => {
          response += `${i + 1}. **${hotel.name}**\n`;
          response += `   üí∞ ${hotel.pricePerNight} ‚ÇΩ/–Ω–æ—á—å\n`;
          response += `   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n\n`;
        });
        return response;
      }
    }

    // –ü–æ–∏—Å–∫ –ø–æ –∑–≤–µ–∑–¥–∞–º
    if (lowerMessage.includes('5 –∑–≤–µ–∑–¥') || lowerMessage.includes('–ø—è—Ç—å –∑–≤–µ–∑–¥')) {
      const fiveStarHotels = hardcodedHotels.filter(h => h.starRating === 5);
      let response = '‚≠ê –û—Ç–µ–ª–∏ 5 –∑–≤–µ–∑–¥:\n\n';
      fiveStarHotels.forEach((hotel, i) => {
        response += `${i + 1}. **${hotel.name}**\n`;
        response += `   üí∞ ${hotel.pricePerNight} ‚ÇΩ/–Ω–æ—á—å\n`;
        response += `   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n\n`;
      });
      return response;
    }

    if (lowerMessage.includes('4 –∑–≤–µ–∑–¥') || lowerMessage.includes('—á–µ—Ç—ã—Ä–µ –∑–≤–µ–∑–¥')) {
      const fourStarHotels = hardcodedHotels.filter(h => h.starRating === 4);
      let response = '‚≠ê –û—Ç–µ–ª–∏ 4 –∑–≤–µ–∑–¥—ã:\n\n';
      fourStarHotels.forEach((hotel, i) => {
        response += `${i + 1}. **${hotel.name}**\n`;
        response += `   üí∞ ${hotel.pricePerNight} ‚ÇΩ/–Ω–æ—á—å\n`;
        response += `   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n\n`;
      });
      return response;
    }

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É
    if (lowerMessage.includes('—Ä–æ—Å—Ç–æ–≤') || lowerMessage.includes('–≥–æ—Ä–æ–¥') || lowerMessage.includes('–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç')) {
      return `üèõÔ∏è –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É - —Å—Ç–æ–ª–∏—Ü–∞ –Æ–≥–∞ –†–æ—Å—Å–∏–∏!\n\nüìç **–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–π–æ–Ω—ã:**\n‚Ä¢ –¶–µ–Ω—Ç—Ä - –¥–µ–ª–æ–≤–æ–π —Ä–∞–π–æ–Ω —Å –æ—Ñ–∏—Å–∞–º–∏\n‚Ä¢ –ù–∞—Ö–∏—á–µ–≤–∞–Ω—å - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ä–∞–π–æ–Ω\n‚Ä¢ –õ–µ–≤—ã–π –±–µ—Ä–µ–≥ - –∂–∏–ª—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã\n\nüè® **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—é:**\n‚Ä¢ –¶–µ–Ω—Ç—Ä - —É–¥–æ–±–Ω–æ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞\n‚Ä¢ –ù–∞—Ö–∏—á–µ–≤–∞–Ω—å - –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ –∏ –∏—Å—Ç–æ—Ä–∏—á–Ω–æ\n‚Ä¢ –ë–ª–∏–∑–æ—Å—Ç—å –∫ –î–æ–Ω—É - –∫—Ä–∞—Å–∏–≤—ã–µ –≤–∏–¥—ã\n\nüí° **–°–æ–≤–µ—Ç:** –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞ —Å —Ö–æ—Ä–æ—à–µ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é.`;
    }

    // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—Ç–µ–ª–∏
    const specificHotels = ['–≥—Ä–∞–Ω–¥', '–¥–æ–Ω –ø–ª–∞–∑–∞', '—Ä–æ—Å—Ç–æ–≤', '–±–∏–∑–Ω–µ—Å', '—É—é—Ç', '–∞–º–∞–∫—Å', '—é–∂–Ω–∞—è', '–ø–∞—Ä–∫ –∏–Ω–Ω', '—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π', '–ø—Ä–µ–º–∏—É–º'];
    for (const hotelName of specificHotels) {
      if (lowerMessage.includes(hotelName)) {
        const hotel = hardcodedHotels.find(h => h.name.toLowerCase().includes(hotelName));
        if (hotel) {
          return `üè® **${hotel.name}**\n\nüìç **–ê–¥—Ä–µ—Å:** ${hotel.address}\nüí∞ **–¶–µ–Ω–∞:** ${hotel.pricePerNight} ‚ÇΩ/–Ω–æ—á—å\n‚≠ê **–†–µ–π—Ç–∏–Ω–≥:** ${hotel.rating.toFixed(1)} (${hotel.starRating} –∑–≤–µ–∑–¥)\n\n‚ú® **–û–ø–∏—Å–∞–Ω–∏–µ:** ${hotel.description}\n\nüéØ **–£–¥–æ–±—Å—Ç–≤–∞:** ${hotel.amenities.join(', ')}\n\nüìû **–¢–µ–ª–µ—Ñ–æ–Ω:** ${hotel.phone}\nüåê **–°–∞–π—Ç:** ${hotel.website}`;
        }
      }
    }

    // –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    return await this.getHotelRecommendations(this.currentSession?.location);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –ø–æ sessionId (offline —Ä–µ–∂–∏–º - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤)
   */
  static async getChatHistory(sessionId: string): Promise<ChatMessage[]> {
    try {
      console.log('üìú –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ (offline —Ä–µ–∂–∏–º):', sessionId);
      
      // –í offline —Ä–µ–∂–∏–º–µ –∏—Å—Ç–æ—Ä–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
      console.log('‚ÑπÔ∏è –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ offline —Ä–µ–∂–∏–º–µ');
        return [];
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞:', error);
      return [];
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ—Ç–µ–ª–µ–π
   */
  static async getHotelRecommendations(location?: string): Promise<string> {
    try {
      console.log('üè® –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ—Ç–µ–ª–µ–π:', location);

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª–µ–π
      const { hardcodedHotels } = await import('../data/hotels');

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã—Ö
      const topHotels = hardcodedHotels
        .sort((a, b) => b.rating - a.rating)
        .slice(0, 5);

      let recommendations = `üè® **–¢–æ–ø-5 –æ—Ç–µ–ª–µ–π –≤ ${location || '–†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É'}:**\n\n`;
      
      topHotels.forEach((hotel, index) => {
        const stars = '‚≠ê'.repeat(hotel.starRating);
        recommendations += `**${index + 1}. ${hotel.name}** ${stars}\n`;
        recommendations += `üìç ${hotel.address}\n`;
        recommendations += `üí∞ ${hotel.pricePerNight} ${hotel.currency}/–Ω–æ—á—å\n`;
        recommendations += `‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating.toFixed(1)}\n`;
        recommendations += `‚ú® ${hotel.description}\n`;
        
        if (hotel.amenities.length > 0) {
          recommendations += `üéØ –£–¥–æ–±—Å—Ç–≤–∞: ${hotel.amenities.slice(0, 4).join(', ')}\n`;
        }
        
        recommendations += `\n`;
      });

      // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const budgetHotel = hardcodedHotels.find(h => h.pricePerNight < 5000);
      const luxuryHotel = hardcodedHotels.find(h => h.pricePerNight > 8000);
      
      recommendations += `\nüí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:**\n\n`;
      if (budgetHotel) {
        recommendations += `üí∞ **–ë—é–¥–∂–µ—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:** ${budgetHotel.name} (${budgetHotel.pricePerNight}‚ÇΩ/–Ω–æ—á—å)\n`;
      }
      if (luxuryHotel) {
        recommendations += `üíé **–ü—Ä–µ–º–∏—É–º –≤–∞—Ä–∏–∞–Ω—Ç:** ${luxuryHotel.name} (${luxuryHotel.pricePerNight}‚ÇΩ/–Ω–æ—á—å)\n`;
      }
      recommendations += `üèÜ **–õ—É—á—à–∏–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É:** ${topHotels[0].name} (${topHotels[0].rating.toFixed(1)}‚≠ê)\n\n`;
      
      recommendations += `üîç **–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º?** –ù–∞–ø–∏—à–∏—Ç–µ:\n`;
      recommendations += `‚Ä¢ "–±—é–¥–∂–µ—Ç–Ω—ã–µ –æ—Ç–µ–ª–∏" - –¥–ª—è —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤\n`;
      recommendations += `‚Ä¢ "–ø—Ä–µ–º–∏—É–º –æ—Ç–µ–ª–∏" - –¥–ª—è —Ä–æ—Å–∫–æ—à–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞\n`;
      recommendations += `‚Ä¢ "–æ—Ç–µ–ª–∏ —Å –ø–∞—Ä–∫–æ–≤–∫–æ–π" - –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —É–¥–æ–±—Å—Ç–≤–∞–º\n`;
      recommendations += `‚Ä¢ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è - –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏`;

      console.log('‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ —Ö–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã—Ö');
      return recommendations;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', error);
      return '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç–µ–ª–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
   */
  static getCurrentSession(): AISession | null {
    return this.currentSession;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π
   */
  static getSessionHistory(): AISession[] {
    return this.sessionHistory;
  }

  /**
   * –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
   */
  static endCurrentSession(): void {
    console.log('üîö –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ AI —Å–µ—Å—Å–∏–∏');
    this.currentSession = null;
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥—É—é —Å–µ—Å—Å–∏—é
   */
  static async switchToSession(sessionId: string): Promise<AISession | null> {
    try {
      const session = this.sessionHistory.find(s => s.sessionId === sessionId);
      if (session) {
        this.currentSession = session;
        console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–µ—Å—Å–∏—é:', sessionId);
        return session;
      }
      return null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', error);
      return null;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Å—Å–∏–∏
   */
  static isSessionActive(): boolean {
    return this.currentSession !== null;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Å—Å–∏–∏
   */
  static getSessionStats(): {
    totalSessions: number;
    currentSessionMessages: number;
    lastActivity?: Date;
  } {
    return {
      totalSessions: this.sessionHistory.length,
      currentSessionMessages: this.currentSession?.messageCount || 0,
      lastActivity: this.currentSession?.lastActivity
    };
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π
   */
  static clearSessionHistory(): void {
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π');
    this.sessionHistory = [];
    this.currentSession = null;
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   */
  static createWelcomeMessage(session: AISession): ChatMessage {
    return {
      id: 'welcome',
      role: 'assistant',
      content: `–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ç—É—Ä–∏–∑–º—É –≤ ${session.location}. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –æ—Ç–µ–ª—è–º, –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º –∏ –º–∞—Ä—à—Ä—É—Ç–∞–º. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,
      timestamp: new Date(),
      sessionId: session.sessionId
    };
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
   */
  static createErrorMessage(error: string): ChatMessage {
    return {
      id: 'error',
      role: 'assistant',
      content: `–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Å—Å–∏—é.`,
      timestamp: new Date()
    };
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ
   */
  static createLoadingMessage(): ChatMessage {
    return {
      id: 'loading',
      role: 'assistant',
      content: '–î—É–º–∞—é... ü§î',
      timestamp: new Date()
    };
  }
}