// –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞
const AIController = require('./controllers/ai-controller');

async function testAI() {
  console.log('üß™ –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');
    const response1 = await AIController.sendMessage({
      body: {
        message: '–ø—Ä–∏–≤–µ—Ç',
        context: {}
      }
    }, {
      json: (data) => {
        console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', data.data.content);
        return { json: () => {} };
      }
    }, () => {});
    console.log('');

    // –¢–µ—Å—Ç 2: –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å
    console.log('2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞...');
    const response2 = await AIController.sendMessage({
      body: {
        message: '–ß—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É?',
        context: {
          location: '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É',
          interests: ['–º—É–∑–µ–∏', '–ø–∞—Ä–∫–∏']
        }
      }
    }, {
      json: (data) => {
        console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', data.data.content);
        return { json: () => {} };
      }
    }, () => {});
    console.log('');

    // –¢–µ—Å—Ç 3: –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å
    console.log('3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞...');
    const response3 = await AIController.sendMessage({
      body: {
        message: '–ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞?',
        context: {
          current_location: {
            latitude: 47.2144,
            longitude: 38.9365
          }
        }
      }
    }, {
      json: (data) => {
        console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', data.data.content);
        return { json: () => {} };
      }
    }, () => {});
    console.log('');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:');
    console.error('Error:', error.message);
    console.error('Stack:', error.stack);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testAI();
