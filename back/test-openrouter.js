const axios = require('axios');
const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '.env') });

async function testOpenRouter() {
  const apiKey = process.env.OPENROUTER_API_KEY;
  
  if (!apiKey) {
    console.error('‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
    console.log('–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', __dirname);
    console.log('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', Object.keys(process.env).filter(key => key.includes('OPEN')));
    return;
  }

  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenRouter API...\n');
  console.log('API Key –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤:', apiKey.substring(0, 10) + '...');

  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenRouter API...\n');
  console.log('API Key:', apiKey ? `${apiKey.substring(0, 10)}...` : '–Ω–µ –Ω–∞–π–¥–µ–Ω');

  try {
    const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {
      model: 'tngtech/deepseek-r1t2-chimera:free', // –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–∞—è –º–æ–¥–µ–ª—å
      messages: [
        {
          role: 'user',
          content: '–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ - –∫–∞–∫ –¥–µ–ª–∞?'
        }
      ],
      max_tokens: 50,
      temperature: 0.7
    }, {
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Content-Type': 'application/json',
        'HTTP-Referer': 'https://rostov-ai-travel.com',
        'X-Title': 'Rostov AI Travel'
      },
      timeout: 10000 // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    });

    console.log('‚úÖ OpenRouter —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log('–û—Ç–≤–µ—Ç:', response.data.choices[0].message.content);
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å:', response.data.model);
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤:', response.data.usage?.total_tokens);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ OpenRouter:');
    
    if (error.response) {
      // –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –æ—à–∏–±–∫–æ–π
      console.error('Status:', error.response.status);
      console.error('Data:', JSON.stringify(error.response.data, null, 2));
    } else if (error.request) {
      // –ó–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç
      console.error('No response received:', error.message);
    } else {
      // –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
      console.error('Error:', error.message);
    }
  }
}

testOpenRouter();